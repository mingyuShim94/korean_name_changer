# Task ID: 13
# Title: Implement SEO and Metadata
# Status: done
# Dependencies: 2
# Priority: medium
# Description: Optimize the application for search engines by adding proper metadata, Open Graph tags, and structured data.
# Details:
1. Update the root layout.tsx with metadata configuration:
```tsx
import type { Metadata } from 'next';

export const metadata: Metadata = {
  title: 'Korean Name Changer - Discover Your Poetic Korean Name',
  description: 'Transform your foreign name into a meaningful Korean name with deep cultural connections and poetic interpretations.',
  keywords: ['Korean name', 'name generator', 'Korean culture', 'name meaning', 'Korean translation'],
  authors: [{ name: 'Korean Name Changer' }],
  creator: 'Korean Name Changer',
  publisher: 'Korean Name Changer',
  formatDetection: {
    email: false,
    telephone: false,
    address: false,
  },
  metadataBase: new URL('https://koreannamechanger.com'), // Update with your actual domain
  alternates: {
    canonical: '/',
  },
  openGraph: {
    type: 'website',
    locale: 'en_US',
    url: 'https://koreannamechanger.com', // Update with your actual domain
    title: 'Korean Name Changer - Discover Your Poetic Korean Name',
    description: 'Transform your foreign name into a meaningful Korean name with deep cultural connections and poetic interpretations.',
    siteName: 'Korean Name Changer',
    images: [
      {
        url: '/og-image.jpg', // Create this image in the public folder
        width: 1200,
        height: 630,
        alt: 'Korean Name Changer',
      },
    ],
  },
  twitter: {
    card: 'summary_large_image',
    title: 'Korean Name Changer - Discover Your Poetic Korean Name',
    description: 'Transform your foreign name into a meaningful Korean name with deep cultural connections and poetic interpretations.',
    images: ['/og-image.jpg'], // Same as OpenGraph image
  },
  robots: {
    index: true,
    follow: true,
    googleBot: {
      index: true,
      follow: true,
      'max-image-preview': 'large',
      'max-snippet': -1,
    },
  },
};
```

2. Create a robots.txt file in the public folder:
```
User-agent: *
Allow: /

Sitemap: https://koreannamechanger.com/sitemap.xml
```

3. Create a sitemap.xml file in the public folder:
```xml
<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
  <url>
    <loc>https://koreannamechanger.com/</loc>
    <lastmod>2023-06-18</lastmod>
    <changefreq>monthly</changefreq>
    <priority>1.0</priority>
  </url>
</urlset>
```

4. Add structured data for the application in app/structured-data.tsx:
```tsx
export default function StructuredData() {
  return (
    <script
      type="application/ld+json"
      dangerouslySetInnerHTML={{
        __html: JSON.stringify({
          '@context': 'https://schema.org',
          '@type': 'WebApplication',
          name: 'Korean Name Changer',
          description: 'Transform your foreign name into a meaningful Korean name with deep cultural connections and poetic interpretations.',
          url: 'https://koreannamechanger.com',
          applicationCategory: 'UtilityApplication',
          operatingSystem: 'Web',
          offers: {
            '@type': 'Offer',
            price: '0',
            priceCurrency: 'USD',
          },
          inLanguage: 'en',
          author: {
            '@type': 'Organization',
            name: 'Korean Name Changer',
            url: 'https://koreannamechanger.com',
          },
        }),
      }}
    />
  );
}
```

5. Include the structured data in the layout:
```tsx
import StructuredData from './structured-data';

export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="en">
      <head>
        <StructuredData />
      </head>
      <body>
        {/* ... */}
      </body>
    </html>
  );
}
```

6. Create a manifest.json file in the public folder:
```json
{
  "name": "Korean Name Changer",
  "short_name": "KoreanName",
  "description": "Transform your foreign name into a meaningful Korean name",
  "start_url": "/",
  "display": "standalone",
  "background_color": "#ffffff",
  "theme_color": "#4f46e5",
  "icons": [
    {
      "src": "/icon-192.png",
      "sizes": "192x192",
      "type": "image/png"
    },
    {
      "src": "/icon-512.png",
      "sizes": "512x512",
      "type": "image/png"
    }
  ]
}
```

7. Link to the manifest in the layout:
```tsx
<link rel="manifest" href="/manifest.json" />
```

# Test Strategy:
1. Validate the HTML metadata using tools like the Google Rich Results Test
2. Check Open Graph tags using Facebook's Sharing Debugger
3. Validate Twitter Card tags using Twitter's Card Validator
4. Test structured data using Google's Structured Data Testing Tool
5. Verify robots.txt and sitemap.xml are accessible and correctly formatted
6. Check that all URLs in metadata are absolute and correct
7. Verify manifest.json is valid and properly linked
8. Test SEO score using tools like Lighthouse or PageSpeed Insights
